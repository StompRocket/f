{"version":3,"sources":["/home/cheese/projects/development/fjs/guide.mdx"],"names":["MDXContent","props","_this","Object","_home_cheese_projects_development_fjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_cheese_projects_development_fjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_cheese_projects_development_fjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","_home_cheese_projects_development_fjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","className","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/guide.4a856baa.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"guide\"}}>{`Guide`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This page aims to provide a high-level guide to using f.js, and an introduction\nto functional programming concepts and how they can be applied to web design.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are two core principles that dictate how everything in f.js works.`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Everything is a function`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Changes to the model can only occur because of events.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Already it is obvious that f.js does not work like most frontend frameworks do.\nReact, Vue, etc. all try to create a way for the view to update based on changes\nto the data (or model). This is so difficult to achieve cleanly and quickly\nbecause of the imperative nature of the code these frameworks expect you to write.\nThere is no one known source of changes to the model, and because of this, complex\nmethods of handling these changes must be designed. In f.js, since the origin of\nall changes to the model is known, the runtime required is minimal, and more\nimportantly, developers can easily track down bugs.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"hello-world\"}}>{`Hello, World!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that some of the benefits of f.js have been covered, what does an f.js app\nactually look like? Here is a hello world example in f.js:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import * as f from '@stomprocket/f'\n\nlet view = model =>\n  f.b\n    ( )\n    ( model.message )\n\nlet update = (e, model, body) => model\n\nf.render(\"#app\", view, update, {\n  message: \"Hello, World!\"\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Already this looks pretty different from most frameworks. Let's go through it\npart by part.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"the-view\"}}>{`The View`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`On line 3 a function view is declared, which takes a model as its only argument,\nand calls and returns a function `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`f.b`}</MDXTag>{`. The syntax is a bit different from what many\nJavaScript developers might be used to. Why are there two sets of arguments?\nWhere is the logic? It may be more understandable to express this in the regular,\nold JavaScript way, using plain old `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`function`}</MDXTag>{`s.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`function view(model) {\n  return f.b()(model.message)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`b`}</MDXTag>{` function is the same as an HTML `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<b>`}</MDXTag>{` tag in f.js. It takes two sets of\narguments, the first one being it's attributes, and the second, it's body. This\nis an abstraction over what the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`b`}</MDXTag>{` function actually does, take some arguments\nas it's attributes, and return another function that will take arguments for its\nbody. You'll notice this pattern used everywhere in f.js. In fact, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`b`}</MDXTag>{` itself\nis defined as`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const b = elem('b')\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Which means the same code could be written as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`elem('b')()(model.message)`}</MDXTag>{`.\nYou don't need to understand the intricacies of `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`why`}</MDXTag>{` f.js is designed like this\njust yet, that will be covered a bit later.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"update\"}}>{`Update`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`update`}</MDXTag>{` function is defined as taking three arguments, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(e, model, body)`}</MDXTag>{` and\nreturning the model. This function is responsible for handling all events. Since\nour app so far doesn't have any events, it simply returns the model unmodified.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"render\"}}>{`Render`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` function takes a view, an updater function, and a starting model, and\nrenders them to a certain element, in this case `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`#app`}</MDXTag>{`. This function is pretty\nself explanatory, it just renders the view to the element it is told to. It\ndoesn't handle any events or anything itself, it just tells the view what to do\nwhen it has an event to emit. `}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"components\"}}>{`Components`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Everything in f.js is a function, including components. There are two types\nof componenets. Simple styled components (ones that only contain certain\nattributes), or complex ones, that can handle rendering elaborate data.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The first of these is extremely simple due to the functional design of f.js:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`let container = f.div ( f.classList(\"container\") )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Such styled components can be used just like normal f.js dom functions, with\nthe exception that the attributes are ommited.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`let view = model =>\n  container\n    ( f.b ()\n      ( \"Nice\" ) )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Complex components are useful for rendering commonly repeated components. For\nexample, the fotllowing `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`product`}</MDXTag>{` component will render a simple div containing\nthe products name and description.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`let product = p =>\n  f.div\n    ( f.classList(\"product\") )\n    ( f.b () (p.name)\n    , f.p () (p.description) )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Notice the argument `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`p`}</MDXTag>{` used. This allows a seperate, scoped model to be passed\nto the function. In this example, an array of products is rendered using this\ncustom component:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`let view = model =>\n  f.div\n    ()\n    (model.products.map(p => product(p)))\n\nlet update = (e, m, b) => m\n\nf.render(\"#app\", view, update, {\n  products: [\n    {\n      name: \"Foo\",\n      description: \"Foo Description\"\n    },\n    {\n      name: \"Bar\",\n      description: \"Bar Description\"\n    }\n  ]\n})\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}